(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{614:function(t,e,a){t.exports=a.p+"assets/img/whistle.677116c5.png"},615:function(t,e,a){t.exports=a.p+"assets/img/yuque_diagram.35d8dac4.png"},616:function(t,e,a){t.exports=a.p+"assets/img/image-20200521164526840.eb7b5adf.png"},617:function(t,e,a){t.exports=a.p+"assets/img/image-20200521170634535.82eecc9f.png"},618:function(t,e,a){t.exports=a.p+"assets/img/image-20200521170713829.a5a16b53.png"},619:function(t,e,a){t.exports=a.p+"assets/img/image-20200521170748125.c1d8f3f3.png"},620:function(t,e,a){t.exports=a.p+"assets/img/image-20200521170824202.80c6ed42.png"},672:function(t,e,a){"use strict";a.r(e);var s=a(69),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_01-综述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_01-综述"}},[t._v("#")]),t._v(" 01. 综述")]),t._v(" "),s("p",[t._v("从本节开始，我们将结合一个包含了"),s("code",[t._v("简单静态页面")]),t._v("、"),s("code",[t._v("单一接口展示型界面")]),t._v("、"),s("code",[t._v("重交互性界面")]),t._v("、"),s("code",[t._v("Hybrid APP")]),t._v("的 React 项目学习 matman 的使用方法。")]),t._v(" "),s("h2",{attrs:{id:"_1-技术概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-技术概览"}},[t._v("#")]),t._v(" 1. 技术概览")]),t._v(" "),s("h3",{attrs:{id:"_1-1-matman"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-matman"}},[t._v("#")]),t._v(" 1.1 matman")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/matmanjs/matman",target:"_blank",rel:"noopener noreferrer"}},[t._v("matman"),s("OutboundLink")],1),t._v(" 是一个用于"),s("strong",[t._v("web 端对端测试")]),t._v("（E2E，End-to-End Testing）的框架，它提供了一整套方案，十分适合 web 前端开发人员来编写端对端测试。拥有更适合 "),s("strong",[t._v("web 前端开发者使用")]),t._v("、"),s("strong",[t._v("更适合单页面的精细化测试")]),t._v("等特点。")]),t._v(" "),s("h3",{attrs:{id:"_1-2-mockstar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-mockstar"}},[t._v("#")]),t._v(" 1.2 mockstar")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/mockstarjs/mockstar",target:"_blank",rel:"noopener noreferrer"}},[t._v("mockStar"),s("OutboundLink")],1),t._v(" 是一个用于"),s("strong",[t._v("构造及管理桩数据")]),t._v("（模拟数据）的工具。也是我们推荐的数据 Mock 工具。")]),t._v(" "),s("p",[t._v("它具有以下特点：")]),t._v(" "),s("ul",[s("li",[t._v("支持多种方式灵活构造桩数据")]),t._v(" "),s("li",[t._v("支持独立的管理端自由切换不同桩数据")]),t._v(" "),s("li",[t._v("支持基于 XHR 场景的数据打桩")]),t._v(" "),s("li",[t._v("支持异步调用场景（例如 JSBridge 异步回调等）的数据打桩")]),t._v(" "),s("li",[t._v("支持 E2E（端对端）测试等场景")])]),t._v(" "),s("h3",{attrs:{id:"_1-3-whistle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-whistle"}},[t._v("#")]),t._v(" 1.3 whistle")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/avwo/whistle",target:"_blank",rel:"noopener noreferrer"}},[t._v("whistle"),s("OutboundLink")],1),t._v(" 是基于 Node 实现的跨平台 Web 调试代理工具，类似的工具有 Windows 平台上的"),s("a",{attrs:{href:"http://www.telerik.com/fiddler/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fiddler"),s("OutboundLink")],1),t._v("，主要用于查看、修改 HTTP、HTTPS、Websocket 的请求、响应，也可以作为 HTTP 代理服务器使用，不同于 Fiddler 通过断点修改请求响应的方式，whistle 采用的是类似配置系统 hosts 的方式，一切操作都可以通过配置实现，支持域名、路径、正则表达式、通配符、通配路径等多种"),s("a",{attrs:{href:"https://wproxy.org/whistle/pattern.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("匹配方式"),s("OutboundLink")],1),t._v("，且可以通过 Node 模块"),s("a",{attrs:{href:"https://wproxy.org/whistle/plugins.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩展功能"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("img",{staticStyle:{zoom:"25%"},attrs:{src:a(614),alt:"基本功能"}}),t._v(" "),s("p",[t._v("同样 mockstar 同样是我们推荐的数据 mock 工具。")]),t._v(" "),s("h2",{attrs:{id:"_2-目录结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-目录结构"}},[t._v("#")]),t._v(" 2. 目录结构")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├── DevOps\n│   ├── devops-app\n│   ├── matman-app\n│   ├── mockstar-app\n│   └── whistle\n├── LICENSE\n├── README.md\n├── config-overrides.js\n├── package-lock.json\n├── package.json\n├── public\n├── src\n└── test\n    ├── e2e\n    └── unit\n")])])]),s("h3",{attrs:{id:"_2-1-devops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-devops"}},[t._v("#")]),t._v(" 2.1 DevOps")]),t._v(" "),s("blockquote",[s("p",[t._v("包含了我们执行测试需要的所有文件，其中 mockstar-app 与 whistle 如果大家不需要数据 mock 以及网络代理可以忽略，我们接下来的文章也不会着重介绍这俩部分。")])]),t._v(" "),s("ul",[s("li",[t._v("devops-app：执行测试的总控程序，在这个程序中我们执行"),s("strong",[t._v("文件清理、构建环境、执行测试、文件归档")]),t._v("等操作")]),t._v(" "),s("li",[t._v("matman-app：主要执行 E2E 测试，捕捉"),s("strong",[t._v("数据快照")])]),t._v(" "),s("li",[t._v("mockstar-app：生成 mock 数据，进行测试")]),t._v(" "),s("li",[t._v("whistle：向全局的 whistle 中"),s("strong",[t._v("添加代理规则")])])]),t._v(" "),s("h3",{attrs:{id:"_2-2-test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-test"}},[t._v("#")]),t._v(" 2.2 test")]),t._v(" "),s("p",[t._v("本文件夹中我们编写测试用例：")]),t._v(" "),s("ul",[s("li",[t._v("e2e：端到端测试的测试用例文件")]),t._v(" "),s("li",[t._v("unit：单元测试用例文件")])]),t._v(" "),s("h2",{attrs:{id:"_3-运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-运行"}},[t._v("#")]),t._v(" 3. 运行")]),t._v(" "),s("h3",{attrs:{id:"_3-1-启动过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-启动过程"}},[t._v("#")]),t._v(" 3.1 启动过程")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(615),alt:"yuque_diagram"}}),t._v(" "),s("p",[t._v("启动过程如上图所示：")]),t._v(" "),s("ol",[s("li",[t._v("判断端口是否被占用，若被占用则杀掉占用进程")]),t._v(" "),s("li",[t._v("构建被测试的项目")]),t._v(" "),s("li",[t._v("启动 mockstar 与 whistle")]),t._v(" "),s("li",[t._v("执行测试，输出文件")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-启动命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-启动命令"}},[t._v("#")]),t._v(" 3.2 启动命令")]),t._v(" "),s("p",[t._v("在终端中执行下面的命令即可查看效果：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-运行结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-运行结果"}},[t._v("#")]),t._v(" 4. 运行结果")]),t._v(" "),s("p",[t._v("执行 "),s("code",[t._v("npm test")]),t._v(" 命令，我们可以在 "),s("code",[t._v("/DevOps/devops-app/output")]),t._v(" 文件夹中查看所有的输出文件，一般情况下用浏览器打开 "),s("strong",[t._v("index.html")]),t._v(" 即可")]),t._v(" "),s("h3",{attrs:{id:"_4-1-综合入口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-综合入口"}},[t._v("#")]),t._v(" 4.1 综合入口")]),t._v(" "),s("h4",{attrs:{id:"_4-1-1-概览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-概览"}},[t._v("#")]),t._v(" 4.1.1 概览")]),t._v(" "),s("img",{staticStyle:{zoom:"30%"},attrs:{src:a(616),alt:"image-20200521164526840"}}),t._v(" "),s("p",[t._v("输出文件会包括下面几部分：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("单元测试")]),t._v(" "),s("ul",[s("li",[t._v("单元测试报告")]),t._v(" "),s("li",[t._v("单元测试覆盖率报告")])])]),t._v(" "),s("li",[s("strong",[t._v("端到端测试")]),t._v(" "),s("ul",[s("li",[t._v("端到端测试报告")]),t._v(" "),s("li",[t._v("端到端测试覆盖率报告")])])]),t._v(" "),s("li",[t._v("所有文件的压缩包")]),t._v(" "),s("li",[t._v("测试生成的 JSON 结果")]),t._v(" "),s("li",[t._v("whistle 的代理规则")])]),t._v(" "),s("h4",{attrs:{id:"_4-1-2-文件目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-文件目录"}},[t._v("#")]),t._v(" 4.1.2 文件目录")]),t._v(" "),s("p",[t._v("下面，我们给出 "),s("code",[t._v("output")]),t._v(" 的目录结构：")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├── e2e_test_build_output\n│   ├── crawler-script\n│   ├── matman_result_output\n│   └── screenshot_output\n├── e2e_test_report\n│   ├── assets\n│   ├── coverage\n│   ├── mocha-multi-reporters-config.json\n│   ├── mochawesome.html\n│   ├── mochawesome.json\n│   └── test-result.xml\n├── index-html.json\n├── index.html\n├── output.zip\n├── test-record.json\n├── test.whistle.js\n└── unit_test_report\n    ├── assets\n    ├── coverage\n    ├── mocha-multi-reporters-config.json\n    ├── mochawesome.html\n    ├── mochawesome.json\n    └── test-result.xml\n")])])]),s("h5",{attrs:{id:"e2e-test-build-output"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#e2e-test-build-output"}},[t._v("#")]),t._v(" e2e_test_build_output")]),t._v(" "),s("ul",[s("li",[t._v("crawler-script：页面爬虫脚本")]),t._v(" "),s("li",[t._v("matman_result_output：中间结果json")]),t._v(" "),s("li",[t._v("screenshot_output：屏幕截图结果")])]),t._v(" "),s("h5",{attrs:{id:"e2e-test-report"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#e2e-test-report"}},[t._v("#")]),t._v(" e2e_test_report")]),t._v(" "),s("p",[t._v("端到端测试生成的测试报告与覆盖率报告")]),t._v(" "),s("h5",{attrs:{id:"unit-test-report"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unit-test-report"}},[t._v("#")]),t._v(" unit_test_report")]),t._v(" "),s("p",[t._v("单元测试生成的测试报告与覆盖率报告")]),t._v(" "),s("h3",{attrs:{id:"_4-2-单元测试（ut）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-单元测试（ut）"}},[t._v("#")]),t._v(" 4.2 单元测试（UT）")]),t._v(" "),s("p",[t._v("测试报告：")]),t._v(" "),s("img",{staticStyle:{zoom:"15%"},attrs:{src:a(617),alt:"image-20200521170634535"}}),t._v(" "),s("p",[t._v("覆盖率报告：")]),t._v(" "),s("img",{staticStyle:{zoom:"15%"},attrs:{src:a(618),alt:"image-20200521170713829"}}),t._v(" "),s("h3",{attrs:{id:"_4-3-端到端测试（e2e）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-端到端测试（e2e）"}},[t._v("#")]),t._v(" 4.3 端到端测试（E2E）")]),t._v(" "),s("p",[t._v("测试报告：")]),t._v(" "),s("img",{staticStyle:{zoom:"15%"},attrs:{src:a(619),alt:"image-20200521170748125"}}),t._v(" "),s("p",[t._v("覆盖率报告：")]),t._v(" "),s("img",{staticStyle:{zoom:"15%"},attrs:{src:a(620),alt:"image-20200521170824202"}})])}),[],!1,null,null,null);e.default=r.exports}}]);